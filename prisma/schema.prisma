// This is your Prisma schema file

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id            String        @id @default(uuid())
  name          String
  description   String?
  subcategories Subcategory[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Subcategory {
  id          String   @id @default(uuid())
  name        String
  description String?
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Brand {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TypeMicronutrient {
  VITAMIN
  MINERAL
  FATTY_ACID
  AMINO_ACID
  ANTIOXIDANT_COMPOUND
  PROBIOTIC
  PHYTONUTRIENT
}

enum AllergenType {
  NONE
  GLUTEN
  LACTOSE
  NUTS
  PEANUTS
  SOY
  EGGS
  FISH
  SHELLFISH
  CELERY
  MUSTARD
  SESAME
  SULFITES
  LUPIN
  MOLLUSCS
}

enum OriginType {
  ANIMAL
  VEGETAL
  SYNTHETIC
  MINERAL
  MICROBIAL
}

enum AdditiveType {
  NONE
  SWEETENER
  PRESERVATIVE
  COLORANT
  EMULSIFIER
  FLAVOR_ENHANCER
  STABILIZER
  THICKENER
  ACIDULANT
  BULKING_AGENT
  COATING_AGENT
  ANTI_CAKING_AGENT
  ANTI_FOAMING_AGENT
  ANTIOXIDANT
  CLARIFYING_AGENT
  COAGULANT
  COLOR_FIXATIVE
  GASES
  RAISING_AGENT
  GELLING_AGENT
  HUMECTANT
  ACIDITY_REGULATOR
  FLAVORING
  MELTING_SALT
  SEQUESTRANT
  FLOUR_TREATMENT_AGENT
  VARIOUS
}

enum RiskLevel {
  NONE
  LOW
  MEDIUM
  HIGH
}

enum RiskType {
  CARCINOGENIC
  ALLERGENIC
  INFLAMMATORY
  ENDOCRINE_DISRUPTOR
  NEUROTOXIC
  MUTAGENIC
  HEPATOTOXIC
  CARDIOTOXIC
  OBESOGENIC
  HIGH_GI
  ADDICTIVE
  CONTAMINANTS
  ANTINUTRIENTS
}

model Ingredient {
  id                 String                    @id @default(uuid())
  name               String                    @db.VarChar(100)
  scientificName     String?                   @db.VarChar(100)
  isBasicFood        Boolean                   @default(false)
  description        String?                   @db.Text
  allergenType       AllergenType              @default(NONE)
  origin             OriginType
  additiveType       AdditiveType              @default(NONE)
  servingSize        Decimal?                  @db.Decimal(10, 2)
  servingMeasurement String?                   @db.VarChar(20)
  calories           Decimal                   @db.Decimal(10, 2)
  proteins           Decimal?                  @db.Decimal(10, 2)
  carbohydrates      Decimal?                  @db.Decimal(10, 2)
  sugars             Decimal?                  @db.Decimal(10, 2)
  fats               Decimal?                  @db.Decimal(10, 2)
  saturatedFats      Decimal?                  @db.Decimal(10, 2)
  fiber              Decimal?                  @db.Decimal(10, 2)
  risks              IngredientRisk[]
  micronutrients     IngredientMicronutrient[]
  createdAt          DateTime                  @default(now())
  updatedAt          DateTime                  @updatedAt

  @@map("ingredients")
}

model IngredientRisk {
  id           String     @id @default(uuid())
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  ingredientId String
  riskType     RiskType
  level        RiskLevel  @default(NONE)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([ingredientId, riskType])
  @@map("ingredient_risks")
}

enum SolubilityType {
  FAT_SOLUBLE
  WATER_SOLUBLE
  INORGANIC
  BIOCONVERTIBLE
  AMPHIPHILIC
  TRANSPORT_DEPENDENT
  N_A
}

enum FunctionType {
  VISION
  IMMUNE_SUPPORT
  ENERGY_METABOLISM
  BONE_HEALTH
  BLOOD_HEALTH
  ANTIOXIDANT
  NEUROTRANSMITTER
  CELL_GROWTH
  OXYGEN_TRANSPORT
  ENZYMATIC
  ELECTROLYTE
  HORMONE_REGULATION
  GLUCOSE_REGULATION
  ANTI_INFLAMMATORY
  CARDIOPROTECTIVE
  NEUROPROTECTIVE
  ESSENTIAL_FATTY_ACID
  COLLAGEN
  MUSCLE_GROWTH
  GUT_BARRIER
  NUTRIENT_ABSORPTION
  HORMONE_PRECURSOR
  SKIN_HEALTH
  ANTI_CANCER
  IMMUNE_MODULATOR
  STRUCTURAL
  DETOXIFICATION
  GUT_MICROBIOME
  DNA_SYNTHESIS
  LIGHT_FILTER
}

enum EssentialityType {
  ESSENTIAL
  CONDITIONALLY_ESSENTIAL
  NON_ESSENTIAL
  BENEFICIAL
  UNCLEAR
}

enum SourceType {
  EXOGENOUS
  ENDOGENOUS
  PARTIAL_SYNTHESIS
  MICROBIOTA
  DUAL_SOURCE
  CONDITIONAL_SYNTHESIS
  STORAGE_DEPENDENT
  SYNTHETIC
}

enum BioactiveType {
  RETINOID
  CAROTENOID
  TOCOPHEROL
  TOCOTRIENOL
  NAPHTHOQUINONE
  SECOSTEROID
  FLAVIN
  NICOTINAMIDE
  PYRIDOXINE
  COBALAMIN
  ASCORBATE
  THIAMINE
  FOLATE
  PANTOTHENATE
  BIOTIN
  CHOLINE
  ESSENTIAL_MINERAL
  TRACE_ELEMENT
  BIOFLAVONOID
  POLYPHENOL
  ORGANOSULFUR
  XANTHOPHYLL
  QUINONE
  BETAINE
  PHOSPHOLIPID
  AMINO_ACID_DERIVATIVE
  TERPENOID
  ALKALOID
  GLUCOSINOLATE
  PHYTOSTEROL
  PROBIOTIC_STRAIN
  PREBIOTIC
}

model Micronutrient {
  id                  String                    @id @default(uuid())
  name                String                    @db.VarChar(100)
  description         String?                   @db.Text
  type                TypeMicronutrient
  tolerableLimit      String?
  unit                String                    @db.VarChar(20)
  dailyRecommendation String?
  ingredients         IngredientMicronutrient[]
  solubility          SolubilityType
  function            FunctionType[]
  essentiality        EssentialityType
  source              SourceType
  bioactiveType       BioactiveType
  createdAt           DateTime                  @default(now())
  updatedAt           DateTime                  @updatedAt

  @@map("micronutrients")
}

model IngredientMicronutrient {
  ingredient      Ingredient    @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  ingredientId    String
  micronutrient   Micronutrient @relation(fields: [micronutrientId], references: [id])
  micronutrientId String
  amount          Decimal       @db.Decimal(10, 2)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@id([ingredientId, micronutrientId])
  @@map("ingredient_micronutrients")
}
